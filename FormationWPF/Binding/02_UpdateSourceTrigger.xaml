<Window x:Class="FormationWPF.Binding._02_UpdateSourceTrigger"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FormationWPF.Binding"
        mc:Ignorable="d"
        Title="_02_UpdateSourceTrigger" Height="450" Width="800">
    <StackPanel>
        <!--La propriété "DataContext"  est la source par defaut de nos liaisons
            On peut definir un DataContext pour la fenêtre 
            
            Attribut DataContext dans Window ou dans le  code-behind dans le constructeur de la fenêtre 
                - Dans le code-behind : this.DataContext = this;
                - Dans la fenêtre Window: DataContext = "{Binding RelativeSource = {RelativeSource Self}}"
            On indique à la fenêtre que nous voulons qu'elle soit elle même le context de données c'est à dire la source 
            
            Lorsque plusieurs propriété sont liées à la même source(ici la fenetre) on peut utiliser le DataContext 
        -->
        
        <!--
          UpdateSourceTrigger : Spécifie un événement qui va déclencher la mise à jour des données vers la source
            Cela permet de repondre aux questions suivantes : 
          A quel moment l'objet source est-elle mise à jour ? 
                    - Est-ce lorsqu'on saisit le texte ? 
                    - Ou bien quand la modification du texte est terminée et que l'on donne le focus à un autre contrôle 
        
         La propriété UpdateSourceTrigger est utilisée pour determiner de quelle façon la propriété est mise à jour. 
        La propriété UpdateSourceTrigger peut prendre quatre valeurs possible: 
                   - PropertyChanged : la source du binding est mise à jour immédiatement lorsque la cible est modifiée 
                   - LostFocus : la source est mise à jour dès lors que le contrôle perd le focus (appui sur la touche Tabulation, 
                                        clic sur un autre contrôle avec la souris, etc.) 
                   - Explicit : la source est mise à jour uniquement lorsque, dans le code-behind la méthode UpdateSource est appelée ;
        -->
        <WrapPanel>
            <TextBlock Text="Window title : " Margin="20"/>
           <!-- <TextBox x:Name="txtWindowTitle" Width="200" Margin="0, 10" Text="{Binding  Title, UpdateSourceTrigger=PropertyChanged}" />-->

            <TextBox x:Name="txtWindowTitle" Width="200" Margin="0, 10" Text="{Binding  Title, UpdateSourceTrigger=Explicit}" />
            <Button x:Name="btnUpdateSource"  Content="*" Width="40" Height="30" FontWeight="Bold" FontSize="16" Margin="20, 0,0,0" Click="btnUpdateSource_Click"/>
        </WrapPanel>

        <!--Lost Focus et PropertyChanged-->
        <WrapPanel Margin="10">
            <TextBlock Text="Window dimensions : " />
            <!--TextBox récuperer la largeur  : LostFocus -->
            <TextBox  Width="50"  Text="{Binding Width, UpdateSourceTrigger=LostFocus}"/>
            <TextBlock Text="X" />
            <!--TextBox récuperer la Hauteur  PropertyChanged-->
            <TextBox Width="50" Text="{Binding Height, UpdateSourceTrigger=PropertyChanged}"/>
        </WrapPanel>
        
    </StackPanel>
</Window>
